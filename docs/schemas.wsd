@startuml Fabion

left to right direction

class Subtitles << (I,#FF7700) >> {
  #id
  +fields
  *relations field
}

namespace Accounts #FCF6BD {
  class User << (S,#FF7700) >> {
    #id: <b>uuid</b>
    +inserted_at: <b>timestamp</b>
    +updated_at: <b>timestamp</b>
    ..
    +node_id: string
    +login: string
    +html_url: string
    +avatar_url: string
  }

  User "1..*" -- "0..*" Sources.RepositoryEvent
}

namespace Sources #FCF6BD {
  enum RepositoryEventType {
    <b>PUSH</b>
    <b>PULL_REQUEST</b>
  }

  class Repository << (S,#FF7700) >> {
    #id: <b>uuid</b>
    +inserted_at: <b>timestamp</b>
    +updated_at: <b>timestamp</b>
    ..
    *pipelines: <i>Build.Pipeline</i>
    ..
    +github_repo: string
    +github_secret: string
    +gcloud_repo: string
    +github_token: string
  }

  class RepositoryEvent << (S,#FF7700) >> {
    #id: <b>uuid</b>
    +inserted_at: <b>timestamp</b>
    +updated_at: <b>timestamp</b>
    ..
    *repository: <i>Sources.Repository</i>
    *sender: <i>Accounts.User</i>
    ..
    +type: RepositoryEventType
    +params: map
  }

  RepositoryEvent "1..*" -- "0..*" Repository
  RepositoryEvent --# RepositoryEventType
}


namespace Builder #D0F4DE {
  enum JobStatus {
    <b>NEW</b>
    <b>RUNNING</b>
    <b>RUNNING_NOTIFIED</b>
    <b>FAILED</b>
    <b>FAILED_NOTIFIED</b>
    <b>CANCELLED</b>
    <b>CANCELLED_NOTIFIED</b>
  }

  enum WhenType {
    <b>MANUAL</b>
    <b>AUTO</b>
  }

  class Pipeline << (S,#FF7700) >> {
    #id: <b>uuid</b>
    +inserted_at: <b>timestamp</b>
    +updated_at: <b>timestamp</b>
    ..
    *repository: <i>Sources.Repository</i>
    *Repositoryevent: <i>Sources.RepositoryEvent</i>
    ..
    +commit_sha: string
    +commit_message: string
    +refs: string
  }

  Pipeline "1..*" -- "0..*" Sources.Repository
  Pipeline "1..*" -- "0..*" Sources.RepositoryEvent

  class Stage << (S,#FF7700) >> {
    #id: <b>uuid</b>
    +inserted_at: <b>timestamp</b>
    +updated_at: <b>timestamp</b>
    ..
    *pipeline: <i>Pipeline</i>
    *when: <i>WhenType</i>
    ..
    +name: string
    +except: [string]
    +only: [string]
    +config_file: string
    +config: map
    +cloudbuild_extras: map
  }

  Stage "1..*" -- "0..*" Pipeline
  Stage --# WhenType

  class Job << (S,#FF7700) >> {
    #id: <b>uuid</b>
    +inserted_at: <b>timestamp</b>
    +updated_at: <b>timestamp</b>
    ..
    *status: <i>JobStatus</i>
    *gcloud_build_id: <i>GoogleCloudBuild.Build</i>
    ..
  }

  Job --# JobStatus
  Job "1..*" -- "0..*" Stage
}

namespace GoogleCloudBuild #FBBD0A {
  class Build {
    +id: string
  }

  class Source {
    +name: string
  }

  Build <-- Builder.Job
  Source <-- Sources.Repository : "field: gcloud_repo"
}

namespace GithubService #99DBF3 {
  class User {
    +node_id: string
  }

  class Repository {
    +url: string
  }

  enum RepositoryEventType {
  }

  User <-- Accounts.User
  Repository <-- Sources.Repository : "field: github_repo"
  RepositoryEventType #-- Sources.RepositoryEventType
}

@enduml
